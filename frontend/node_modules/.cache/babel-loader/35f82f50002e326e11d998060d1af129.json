{"ast":null,"code":"var _jsxFileName = \"/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/EmojiImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmojiImage = _ref => {\n  _s();\n\n  let {\n    emojis\n  } = _ref;\n  const canvasRef = useRef(null);\n\n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n    ctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId; //Our draw came here\n\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EmojiImage, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = EmojiImage;\nexport default EmojiImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiImage\");","map":{"version":3,"sources":["/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/EmojiImage.js"],"names":["React","useRef","useEffect","EmojiImage","emojis","canvasRef","draw","ctx","frameCount","clearRect","canvas","width","height","fillStyle","beginPath","arc","Math","sin","PI","fill","current","context","getContext","animationFrameId","render","window","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;;AAEA,MAAMC,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAClC,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMK,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACjCD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBF,GAAG,CAACG,MAAJ,CAAWC,KAA/B,EAAsCJ,GAAG,CAACG,MAAJ,CAAWE,MAAjD;AACAL,IAAAA,GAAG,CAACM,SAAJ,GAAgB,SAAhB;AACAN,IAAAA,GAAG,CAACO,SAAJ;AACAP,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,EAAR,EAAY,GAAZ,EAAiB,KAAKC,IAAI,CAACC,GAAL,CAAST,UAAU,GAAG,IAAtB,KAA+B,CAArD,EAAwD,CAAxD,EAA2D,IAAIQ,IAAI,CAACE,EAApE;AACAX,IAAAA,GAAG,CAACY,IAAJ;AACA,GAND;;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,MAAM,GAAGL,SAAS,CAACe,OAAzB;AACA,UAAMC,OAAO,GAAGX,MAAM,CAACY,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAId,UAAU,GAAG,CAAjB;AACA,QAAIe,gBAAJ,CAJe,CAMf;;AACA,UAAMC,MAAM,GAAG,MAAM;AACpBhB,MAAAA,UAAU;AACVF,MAAAA,IAAI,CAACe,OAAD,EAAUb,UAAV,CAAJ;AACAe,MAAAA,gBAAgB,GAAGE,MAAM,CAACC,qBAAP,CAA6BF,MAA7B,CAAnB;AACA,KAJD;;AAKAA,IAAAA,MAAM;AAEN,WAAO,MAAM;AACZC,MAAAA,MAAM,CAACE,oBAAP,CAA4BJ,gBAA5B;AACA,KAFD;AAGA,GAjBQ,EAiBN,CAACjB,IAAD,CAjBM,CAAT;AAmBA,sBACC;AAAA,2BAiBC;AAAQ,MAAA,GAAG,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA;AAjBD;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CAnDD;;GAAMF,U;;KAAAA,U;AAqDN,eAAeA,UAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst EmojiImage = ({ emojis }) => {\n\tconst canvasRef = useRef(null);\n\n\tconst draw = (ctx, frameCount) => {\n\t\tctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\tctx.fillStyle = '#000000';\n\t\tctx.beginPath();\n\t\tctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n\t\tctx.fill();\n\t};\n\n\tuseEffect(() => {\n\t\tconst canvas = canvasRef.current;\n\t\tconst context = canvas.getContext('2d');\n\t\tlet frameCount = 0;\n\t\tlet animationFrameId;\n\n\t\t//Our draw came here\n\t\tconst render = () => {\n\t\t\tframeCount++;\n\t\t\tdraw(context, frameCount);\n\t\t\tanimationFrameId = window.requestAnimationFrame(render);\n\t\t};\n\t\trender();\n\n\t\treturn () => {\n\t\t\twindow.cancelAnimationFrame(animationFrameId);\n\t\t};\n\t}, [draw]);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* {emojis.map((row, rowindex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={'row:' + rowindex} style={{ padding: 0, height: '7px', width: '95%', margin: '0 auto' }}>\n\t\t\t\t\t\t{row.map((emoji, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tkey={rowindex + ':' + index}\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline-block', margin: 0, padding: '1px', fontSize: 100 / row.length + 'em', width: 100 / row.length + '%', boxSizing: 'border-box' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{emoji === 'empty' ? '\\u00A0' : emoji}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})} */}\n\t\t\t<canvas ref={canvasRef}></canvas>\n\t\t</div>\n\t);\n};\n\nexport default EmojiImage;\n"]},"metadata":{},"sourceType":"module"}