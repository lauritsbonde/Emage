{"ast":null,"code":"var _jsxFileName = \"/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport EmojiImage from './EmojiImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [emojiImage, setEmojiImage] = useState(null);\n\n  const uploadImage = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    fetch('http://localhost:2020/convert', {\n      method: 'POST',\n      headers: {\n        enctype: 'multipart/form-data'\n      },\n      body: formData\n    }).then(res => {\n      res.json().then(data => {\n        if (data.success) {\n          setEmojiImage(data.emojis);\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const [backgroundColor, setBackgroundColor] = useState('#fff');\n\n  const validateHex = hex => {\n    const hexRegex = /^#([A-Fa-f0-9]{6})$/;\n\n    if (hexRegex.test(hex)) {\n      setBackgroundColor(hex);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image to emojiImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: uploadImage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: event => setImage(event.target.files[0]),\n          name: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hex Background color: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => validateHex(e.target.value),\n          placeholder: \"#000000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(image),\n        alt: \"uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), emojiImage && /*#__PURE__*/_jsxDEV(EmojiImage, {\n      emojis: emojiImage,\n      backgroundColor: backgroundColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"HhuXBw3HvClyK3/6aZq11nz/amQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/App.js"],"names":["useState","EmojiImage","App","image","setImage","emojiImage","setEmojiImage","uploadImage","event","preventDefault","formData","FormData","append","fetch","method","headers","enctype","body","then","res","json","data","success","emojis","catch","err","console","log","backgroundColor","setBackgroundColor","validateHex","hex","hexRegex","test","display","target","files","e","value","URL","createObjectURL"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport EmojiImage from './EmojiImage';\n\nfunction App() {\n\tconst [image, setImage] = useState(null);\n\tconst [emojiImage, setEmojiImage] = useState(null);\n\n\tconst uploadImage = (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('image', image);\n\t\tfetch('http://localhost:2020/convert', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tenctype: 'multipart/form-data',\n\t\t\t},\n\t\t\tbody: formData,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tres.json().then((data) => {\n\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\tsetEmojiImage(data.emojis);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst [backgroundColor, setBackgroundColor] = useState('#fff');\n\n\tconst validateHex = (hex) => {\n\t\tconst hexRegex = /^#([A-Fa-f0-9]{6})$/;\n\t\tif (hexRegex.test(hex)) {\n\t\t\tsetBackgroundColor(hex);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Image to emojiImage</h1>\n\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t<form onSubmit={uploadImage}>\n\t\t\t\t\t<input type=\"file\" onChange={(event) => setImage(event.target.files[0])} name=\"image\" />\n\t\t\t\t\t<button type=\"submit\">Upload</button>\n\t\t\t\t</form>\n\t\t\t\t<p>\n\t\t\t\t\tHex Background color: <input type=\"text\" onChange={(e) => validateHex(e.target.value)} placeholder=\"#000000\" />\n\t\t\t\t</p>\n\t\t\t\t{image && <img src={URL.createObjectURL(image)} alt=\"uploaded\" />}\n\t\t\t</div>\n\t\t\t{emojiImage && <EmojiImage emojis={emojiImage} backgroundColor={backgroundColor} />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}