{"ast":null,"code":"var _jsxFileName = \"/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport EmojiImage from './EmojiImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [emojiImage, setEmojiImage] = useState(true);\n\n  const uploadImage = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    fetch('http://localhost:2020/convert', {\n      method: 'POST',\n      headers: {\n        enctype: 'multipart/form-data'\n      },\n      body: formData\n    }).then(res => {\n      res.json().then(data => {\n        if (data.success) {\n          setEmojiImage(data.emojis);\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n    ctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image to emojiImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadImage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: event => setImage(event.target.files[0]),\n        name: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(image),\n      alt: \"uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), emojiImage && /*#__PURE__*/_jsxDEV(EmojiImage, {\n      emojis: emojiImage,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"iW458/7bMooBvY12Fpi409PwDOw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/App.js"],"names":["useState","EmojiImage","App","image","setImage","emojiImage","setEmojiImage","uploadImage","event","preventDefault","formData","FormData","append","fetch","method","headers","enctype","body","then","res","json","data","success","emojis","catch","err","console","log","draw","ctx","frameCount","clearRect","canvas","width","height","fillStyle","beginPath","arc","Math","sin","PI","fill","target","files","URL","createObjectURL"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMO,WAAW,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBT,KAAzB;AACAU,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD,OAF6B;AAKtCC,MAAAA,IAAI,EAAEP;AALgC,KAAlC,CAAL,CAOEQ,IAPF,CAOQC,GAAD,IAAS;AACdA,MAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBG,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACjBhB,UAAAA,aAAa,CAACe,IAAI,CAACE,MAAN,CAAb;AACA;AACD,OAJD;AAKA,KAbF,EAcEC,KAdF,CAcSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdjB;AAeA,GAnBD;;AAqBA,QAAMG,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACjCD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBF,GAAG,CAACG,MAAJ,CAAWC,KAA/B,EAAsCJ,GAAG,CAACG,MAAJ,CAAWE,MAAjD;AACAL,IAAAA,GAAG,CAACM,SAAJ,GAAgB,SAAhB;AACAN,IAAAA,GAAG,CAACO,SAAJ;AACAP,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,EAAR,EAAY,GAAZ,EAAiB,KAAKC,IAAI,CAACC,GAAL,CAAST,UAAU,GAAG,IAAtB,KAA+B,CAArD,EAAwD,CAAxD,EAA2D,IAAIQ,IAAI,CAACE,EAApE;AACAX,IAAAA,GAAG,CAACY,IAAJ;AACA,GAND;;AAQA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAM,MAAA,QAAQ,EAAElC,WAAhB;AAAA,8BACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGC,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACkC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAhD;AAAyE,QAAA,IAAI,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EAMExC,KAAK,iBAAI;AAAK,MAAA,GAAG,EAAEyC,GAAG,CAACC,eAAJ,CAAoB1C,KAApB,CAAV;AAAsC,MAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YANX,EAOEE,UAAU,iBAAI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,UAApB;AAAgC,MAAA,IAAI,EAAEuB;AAAtC;AAAA;AAAA;AAAA;AAAA,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GA5CQ1B,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport EmojiImage from './EmojiImage';\n\nfunction App() {\n\tconst [image, setImage] = useState(null);\n\tconst [emojiImage, setEmojiImage] = useState(true);\n\n\tconst uploadImage = (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('image', image);\n\t\tfetch('http://localhost:2020/convert', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tenctype: 'multipart/form-data',\n\t\t\t},\n\t\t\tbody: formData,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tres.json().then((data) => {\n\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\tsetEmojiImage(data.emojis);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst draw = (ctx, frameCount) => {\n\t\tctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\tctx.fillStyle = '#000000';\n\t\tctx.beginPath();\n\t\tctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n\t\tctx.fill();\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Image to emojiImage</h1>\n\t\t\t<form onSubmit={uploadImage}>\n\t\t\t\t<input type=\"file\" onChange={(event) => setImage(event.target.files[0])} name=\"image\" />\n\t\t\t\t<button type=\"submit\">Upload</button>\n\t\t\t</form>\n\t\t\t{image && <img src={URL.createObjectURL(image)} alt=\"uploaded\" />}\n\t\t\t{emojiImage && <EmojiImage emojis={emojiImage} draw={draw} />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}