{"ast":null,"code":"var _jsxFileName = \"/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/EmojiImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmojiImage = _ref => {\n  _s();\n\n  let {\n    emojis\n  } = _ref;\n  const canvasRef = useRef(null);\n\n  const draw = ctx => {\n    ctx.fillStyle = '#000';\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = '#000000';\n    ctx.font = '10px serif';\n    ctx.fillText('ðŸ”¥', 50, 90);\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let animationFrameId;\n    draw(context);\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: emojis[0].length + 'px'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EmojiImage, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = EmojiImage;\nexport default EmojiImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiImage\");","map":{"version":3,"sources":["/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/EmojiImage.js"],"names":["React","useRef","useEffect","EmojiImage","emojis","canvasRef","draw","ctx","fillStyle","fillRect","canvas","width","height","font","fillText","fill","current","context","getContext","animationFrameId","window","cancelAnimationFrame","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;;AAEA,MAAMC,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAClC,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMK,IAAI,GAAIC,GAAD,IAAS;AACrBA,IAAAA,GAAG,CAACC,SAAJ,GAAgB,MAAhB;AACAD,IAAAA,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBF,GAAG,CAACG,MAAJ,CAAWC,KAA9B,EAAqCJ,GAAG,CAACG,MAAJ,CAAWE,MAAhD;AACAL,IAAAA,GAAG,CAACC,SAAJ,GAAgB,SAAhB;AACAD,IAAAA,GAAG,CAACM,IAAJ,GAAW,YAAX;AACAN,IAAAA,GAAG,CAACO,QAAJ,CAAa,IAAb,EAAmB,EAAnB,EAAuB,EAAvB;AACAP,IAAAA,GAAG,CAACQ,IAAJ;AACA,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,MAAM,GAAGL,SAAS,CAACW,OAAzB;AACA,UAAMC,OAAO,GAAGP,MAAM,CAACQ,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAIC,gBAAJ;AAEAb,IAAAA,IAAI,CAACW,OAAD,CAAJ;AAEA,WAAO,MAAM;AACZG,MAAAA,MAAM,CAACC,oBAAP,CAA4BF,gBAA5B;AACA,KAFD;AAGA,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACC;AAAA,2BAiBC;AAAQ,MAAA,GAAG,EAAEd,SAAb;AAAwB,MAAA,KAAK,EAAED,MAAM,CAAC,CAAD,CAAN,CAAUkB,MAAV,GAAmB;AAAlD;AAAA;AAAA;AAAA;AAAA;AAjBD;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CA7CD;;GAAMnB,U;;KAAAA,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst EmojiImage = ({ emojis }) => {\n\tconst canvasRef = useRef(null);\n\n\tconst draw = (ctx) => {\n\t\tctx.fillStyle = '#000';\n\t\tctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\tctx.fillStyle = '#000000';\n\t\tctx.font = '10px serif';\n\t\tctx.fillText('ðŸ”¥', 50, 90);\n\t\tctx.fill();\n\t};\n\n\tuseEffect(() => {\n\t\tconst canvas = canvasRef.current;\n\t\tconst context = canvas.getContext('2d');\n\t\tlet animationFrameId;\n\n\t\tdraw(context);\n\n\t\treturn () => {\n\t\t\twindow.cancelAnimationFrame(animationFrameId);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* {emojis.map((row, rowindex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={'row:' + rowindex} style={{ padding: 0, height: '7px', width: '95%', margin: '0 auto' }}>\n\t\t\t\t\t\t{row.map((emoji, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tkey={rowindex + ':' + index}\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline-block', margin: 0, padding: '1px', fontSize: 100 / row.length + 'em', width: 100 / row.length + '%', boxSizing: 'border-box' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{emoji === 'empty' ? '\\u00A0' : emoji}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})} */}\n\t\t\t<canvas ref={canvasRef} width={emojis[0].length + 'px'}></canvas>\n\t\t</div>\n\t);\n};\n\nexport default EmojiImage;\n"]},"metadata":{},"sourceType":"module"}