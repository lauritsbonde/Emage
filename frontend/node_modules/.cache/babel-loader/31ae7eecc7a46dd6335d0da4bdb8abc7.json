{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmojiImage=function EmojiImage(_ref){var emojis=_ref.emojis,backgroundColor=_ref.backgroundColor,scaling=_ref.scaling;var canvasRef=useRef(null);var scale={width:window.innerWidth/emojis[0].length*scaling,height:window.innerHeight/emojis.length*scaling};var draw=function draw(ctx){ctx.fillStyle=backgroundColor;ctx.fillRect(0,0,ctx.canvas.width,ctx.canvas.height);ctx.fillStyle='#000000';var fontSize=ctx.canvas.width/(emojis[0].length*(10/8));ctx.font=fontSize+'px serif';for(var i=0;i<emojis.length;i++){ctx.fillText(emojis[i],0,i*scale.height);console.log(emojis[i]);}ctx.fill();};// download canvas as png\nvar download=function download(){var link=document.createElement('a');link.download='emoji.png';link.href=canvasRef.current.toDataURL();link.click();};useEffect(function(){var canvas=canvasRef.current;var context=canvas.getContext('2d');var animationFrameId;draw(context);return function(){window.cancelAnimationFrame(animationFrameId);};});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:emojis[0].length*scale.width+'px',height:emojis.length*scale.height+'px'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){download();},children:\"Download Image\"})]});};export default EmojiImage;","map":{"version":3,"sources":["/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/EmojiImage.js"],"names":["React","useRef","useEffect","EmojiImage","emojis","backgroundColor","scaling","canvasRef","scale","width","window","innerWidth","length","height","innerHeight","draw","ctx","fillStyle","fillRect","canvas","fontSize","font","i","fillText","console","log","fill","download","link","document","createElement","href","current","toDataURL","click","context","getContext","animationFrameId","cancelAnimationFrame"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,KAAyC,OAAzC,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA0C,IAAvCC,CAAAA,MAAuC,MAAvCA,MAAuC,CAA/BC,eAA+B,MAA/BA,eAA+B,CAAdC,OAAc,MAAdA,OAAc,CAC5D,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAAC,IAAD,CAAxB,CACA,GAAMO,CAAAA,KAAK,CAAG,CAAEC,KAAK,CAAGC,MAAM,CAACC,UAAP,CAAoBP,MAAM,CAAC,CAAD,CAAN,CAAUQ,MAA/B,CAAyCN,OAAlD,CAA2DO,MAAM,CAAGH,MAAM,CAACI,WAAP,CAAqBV,MAAM,CAACQ,MAA7B,CAAuCN,OAA1G,CAAd,CAEA,GAAMS,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,GAAD,CAAS,CACrBA,GAAG,CAACC,SAAJ,CAAgBZ,eAAhB,CACAW,GAAG,CAACE,QAAJ,CAAa,CAAb,CAAgB,CAAhB,CAAmBF,GAAG,CAACG,MAAJ,CAAWV,KAA9B,CAAqCO,GAAG,CAACG,MAAJ,CAAWN,MAAhD,EACAG,GAAG,CAACC,SAAJ,CAAgB,SAAhB,CACA,GAAMG,CAAAA,QAAQ,CAAGJ,GAAG,CAACG,MAAJ,CAAWV,KAAX,EAAoBL,MAAM,CAAC,CAAD,CAAN,CAAUQ,MAAV,EAAoB,GAAK,CAAzB,CAApB,CAAjB,CACAI,GAAG,CAACK,IAAJ,CAAWD,QAAQ,CAAG,UAAtB,CACA,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlB,MAAM,CAACQ,MAA3B,CAAmCU,CAAC,EAApC,CAAwC,CACvCN,GAAG,CAACO,QAAJ,CAAanB,MAAM,CAACkB,CAAD,CAAnB,CAAwB,CAAxB,CAA2BA,CAAC,CAAGd,KAAK,CAACK,MAArC,EACAW,OAAO,CAACC,GAAR,CAAYrB,MAAM,CAACkB,CAAD,CAAlB,EACA,CACDN,GAAG,CAACU,IAAJ,GACA,CAXD,CAaA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACtB,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb,CACAF,IAAI,CAACD,QAAL,CAAgB,WAAhB,CACAC,IAAI,CAACG,IAAL,CAAYxB,SAAS,CAACyB,OAAV,CAAkBC,SAAlB,EAAZ,CACAL,IAAI,CAACM,KAAL,GACA,CALD,CAOAhC,SAAS,CAAC,UAAM,CACf,GAAMiB,CAAAA,MAAM,CAAGZ,SAAS,CAACyB,OAAzB,CACA,GAAMG,CAAAA,OAAO,CAAGhB,MAAM,CAACiB,UAAP,CAAkB,IAAlB,CAAhB,CACA,GAAIC,CAAAA,gBAAJ,CAEAtB,IAAI,CAACoB,OAAD,CAAJ,CAEA,MAAO,WAAM,CACZzB,MAAM,CAAC4B,oBAAP,CAA4BD,gBAA5B,EACA,CAFD,CAGA,CAVQ,CAAT,CAYA,mBACC,oCACC,eAAQ,GAAG,CAAE9B,SAAb,CAAwB,KAAK,CAAEH,MAAM,CAAC,CAAD,CAAN,CAAUQ,MAAV,CAAmBJ,KAAK,CAACC,KAAzB,CAAiC,IAAhE,CAAsE,MAAM,CAAEL,MAAM,CAACQ,MAAP,CAAgBJ,KAAK,CAACK,MAAtB,CAA+B,IAA7G,EADD,cAEC,aAFD,cAGC,eACC,OAAO,CAAE,kBAAM,CACdc,QAAQ,GACR,CAHF,4BAHD,GADD,CAaA,CAlDD,CAoDA,cAAexB,CAAAA,UAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst EmojiImage = ({ emojis, backgroundColor, scaling }) => {\n\tconst canvasRef = useRef(null);\n\tconst scale = { width: (window.innerWidth / emojis[0].length) * scaling, height: (window.innerHeight / emojis.length) * scaling };\n\n\tconst draw = (ctx) => {\n\t\tctx.fillStyle = backgroundColor;\n\t\tctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\tctx.fillStyle = '#000000';\n\t\tconst fontSize = ctx.canvas.width / (emojis[0].length * (10 / 8));\n\t\tctx.font = fontSize + 'px serif';\n\t\tfor (let i = 0; i < emojis.length; i++) {\n\t\t\tctx.fillText(emojis[i], 0, i * scale.height);\n\t\t\tconsole.log(emojis[i]);\n\t\t}\n\t\tctx.fill();\n\t};\n\n\t// download canvas as png\n\tconst download = () => {\n\t\tconst link = document.createElement('a');\n\t\tlink.download = 'emoji.png';\n\t\tlink.href = canvasRef.current.toDataURL();\n\t\tlink.click();\n\t};\n\n\tuseEffect(() => {\n\t\tconst canvas = canvasRef.current;\n\t\tconst context = canvas.getContext('2d');\n\t\tlet animationFrameId;\n\n\t\tdraw(context);\n\n\t\treturn () => {\n\t\t\twindow.cancelAnimationFrame(animationFrameId);\n\t\t};\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<canvas ref={canvasRef} width={emojis[0].length * scale.width + 'px'} height={emojis.length * scale.height + 'px'}></canvas>\n\t\t\t<br />\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdownload();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tDownload Image\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default EmojiImage;\n"]},"metadata":{},"sourceType":"module"}