{"ast":null,"code":"var _jsxFileName = \"/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport EmojiImage from './EmojiImage';\nimport appStyle from './Styles/app.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [emojiImage, setEmojiImage] = useState(null);\n  const [backgroundColor, setBackgroundColor] = useState('#fff');\n  const [scale, setScale] = useState(0.75);\n\n  const uploadImage = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    fetch('http://localhost:2020/convert', {\n      method: 'POST',\n      headers: {\n        enctype: 'multipart/form-data'\n      },\n      body: formData\n    }).then(res => {\n      res.json().then(data => {\n        if (data.success) {\n          setEmojiImage(data.emojis);\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const validateHex = hex => {\n    const hexRegex = /^#([A-Fa-f0-9]{6})$/;\n\n    if (hexRegex.test(hex)) {\n      setBackgroundColor(hex);\n    }\n  };\n\n  const validateScale = scale => {\n    if (scale > 0 && scale <= 1) {\n      setScale(scale);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image to emojiImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: appStyle.app,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: uploadImage,\n        className: appStyle.imageUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"custom-file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: event => setImage(event.target.files[0]),\n            name: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"f\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this), \" Custom Upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Upload billed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(image),\n        alt: \"uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hex Background color: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => validateHex(e.target.value),\n            placeholder: \"#000000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Scale: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => validateScale(e.target.value),\n            placeholder: \"0.75\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this), \" (0 - 1)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), emojiImage && /*#__PURE__*/_jsxDEV(EmojiImage, {\n      emojis: emojiImage,\n      backgroundColor: backgroundColor,\n      scaling: scale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"QFIG5f9BfHoP5zP16EvUL19Q7R8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/App.js"],"names":["useState","EmojiImage","appStyle","App","image","setImage","emojiImage","setEmojiImage","backgroundColor","setBackgroundColor","scale","setScale","uploadImage","event","preventDefault","formData","FormData","append","fetch","method","headers","enctype","body","then","res","json","data","success","emojis","catch","err","console","log","validateHex","hex","hexRegex","test","validateScale","textAlign","app","imageUpload","target","files","URL","createObjectURL","e","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport EmojiImage from './EmojiImage';\nimport appStyle from './Styles/app.module.css';\n\nfunction App() {\n\tconst [image, setImage] = useState(null);\n\tconst [emojiImage, setEmojiImage] = useState(null);\n\tconst [backgroundColor, setBackgroundColor] = useState('#fff');\n\tconst [scale, setScale] = useState(0.75);\n\n\tconst uploadImage = (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = new FormData();\n\t\tformData.append('image', image);\n\t\tfetch('http://localhost:2020/convert', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tenctype: 'multipart/form-data',\n\t\t\t},\n\t\t\tbody: formData,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tres.json().then((data) => {\n\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\tsetEmojiImage(data.emojis);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst validateHex = (hex) => {\n\t\tconst hexRegex = /^#([A-Fa-f0-9]{6})$/;\n\t\tif (hexRegex.test(hex)) {\n\t\t\tsetBackgroundColor(hex);\n\t\t}\n\t};\n\n\tconst validateScale = (scale) => {\n\t\tif (scale > 0 && scale <= 1) {\n\t\t\tsetScale(scale);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<h1>Image to emojiImage</h1>\n\t\t\t<div className={appStyle.app}>\n\t\t\t\t<form onSubmit={uploadImage} className={appStyle.imageUpload}>\n\t\t\t\t\t<label class=\"custom-file-upload\">\n\t\t\t\t\t\t<input type=\"file\" onChange={(event) => setImage(event.target.files[0])} name=\"image\" />\n\t\t\t\t\t\t<i class=\"f\"></i> Custom Upload\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type=\"submit\" value=\"Upload billed\" />\n\t\t\t\t</form>\n\t\t\t\t{image && <img src={URL.createObjectURL(image)} alt=\"uploaded\" />}\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tHex Background color: <input type=\"text\" onChange={(e) => validateHex(e.target.value)} placeholder=\"#000000\" />\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tScale: <input type=\"number\" onChange={(e) => validateScale(e.target.value)} placeholder=\"0.75\" /> (0 - 1)\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{emojiImage && <EmojiImage emojis={emojiImage} backgroundColor={backgroundColor} scaling={scale} />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}