{"ast":null,"code":"var _jsxFileName = \"/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/EmojiImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmojiImage = _ref => {\n  _s();\n\n  let {\n    emojis\n  } = _ref;\n  const canvasRef = React.useRef(null);\n  const canvas = canvasRef.current;\n  const ctx = canvas.getContext('2d');\n  const fontSize = '6px';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [emojis.map((row, rowindex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 0,\n          height: '7px',\n          width: '95%',\n          margin: '0 auto'\n        },\n        children: row.map((emoji, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: 'inline-block',\n              margin: 0,\n              padding: '1px',\n              fontSize: 100 / row.length + 'em',\n              width: 100 / row.length + '%',\n              boxSizing: 'border-box'\n            },\n            children: emoji === 'empty' ? '\\u00A0' : emoji\n          }, rowindex + ':' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }, this);\n        })\n      }, 'row:' + rowindex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 6\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EmojiImage, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n\n_c = EmojiImage;\nexport default EmojiImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmojiImage\");","map":{"version":3,"sources":["/Users/lauritsbonde/Desktop/Arbejde/Emage/frontend/src/EmojiImage.js"],"names":["React","createContext","useRef","EmojiImage","emojis","canvasRef","canvas","current","ctx","getContext","fontSize","map","row","rowindex","padding","height","width","margin","emoji","index","display","length","boxSizing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,MAA/B,QAA6C,OAA7C;;;AAEA,MAAMC,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAClC,QAAMC,SAAS,GAAGL,KAAK,CAACE,MAAN,CAAa,IAAb,CAAlB;AACA,QAAMI,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,QAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AAEA,QAAMC,QAAQ,GAAG,KAAjB;AACA,sBACC;AAAA,eACEN,MAAM,CAACO,GAAP,CAAW,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAC9B,0BACC;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,CAAX;AAAcC,UAAAA,MAAM,EAAE,KAAtB;AAA6BC,UAAAA,KAAK,EAAE,KAApC;AAA2CC,UAAAA,MAAM,EAAE;AAAnD,SAApC;AAAA,kBACEL,GAAG,CAACD,GAAJ,CAAQ,CAACO,KAAD,EAAQC,KAAR,KAAkB;AAC1B,8BACC;AAEC,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,cAAX;AAA2BH,cAAAA,MAAM,EAAE,CAAnC;AAAsCH,cAAAA,OAAO,EAAE,KAA/C;AAAsDJ,cAAAA,QAAQ,EAAE,MAAME,GAAG,CAACS,MAAV,GAAmB,IAAnF;AAAyFL,cAAAA,KAAK,EAAE,MAAMJ,GAAG,CAACS,MAAV,GAAmB,GAAnH;AAAwHC,cAAAA,SAAS,EAAE;AAAnI,aAFR;AAAA,sBAIEJ,KAAK,KAAK,OAAV,GAAoB,QAApB,GAA+BA;AAJjC,aACML,QAAQ,GAAG,GAAX,GAAiBM,KADvB;AAAA;AAAA;AAAA;AAAA,kBADD;AAQA,SATA;AADF,SAAU,SAASN,QAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AAcA,KAfA,CADF,eAiBC;AAAQ,MAAA,GAAG,EAAER;AAAb;AAAA;AAAA;AAAA;AAAA,YAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CA3BD;;GAAMF,U;;KAAAA,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React, { createContext, useRef } from 'react';\n\nconst EmojiImage = ({ emojis }) => {\n\tconst canvasRef = React.useRef(null);\n\tconst canvas = canvasRef.current;\n\tconst ctx = canvas.getContext('2d');\n\n\tconst fontSize = '6px';\n\treturn (\n\t\t<div>\n\t\t\t{emojis.map((row, rowindex) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={'row:' + rowindex} style={{ padding: 0, height: '7px', width: '95%', margin: '0 auto' }}>\n\t\t\t\t\t\t{row.map((emoji, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tkey={rowindex + ':' + index}\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'inline-block', margin: 0, padding: '1px', fontSize: 100 / row.length + 'em', width: 100 / row.length + '%', boxSizing: 'border-box' }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{emoji === 'empty' ? '\\u00A0' : emoji}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<canvas ref={canvasRef}></canvas>\n\t\t</div>\n\t);\n};\n\nexport default EmojiImage;\n"]},"metadata":{},"sourceType":"module"}